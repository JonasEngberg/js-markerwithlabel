{"version":3,"file":"index.umd.js","sources":["../src/util.ts","../src/overlay-view-safe.ts","../src/label.ts","../src/marker-safe.ts","../src/marker.ts"],"sourcesContent":["/**\n * Copyright 2020 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Extends an object's prototype by another's.\n *\n * @param type1 The Type to be extended.\n * @param type2 The Type to extend with.\n * @ignore\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function extend(type1: any, type2: any): void {\n  // eslint-disable-next-line prefer-const\n  for (let property in type2.prototype) {\n    type1.prototype[property] = type2.prototype[property];\n  }\n}\n\nexport function abortEvent(e: Event | null) {\n  e = e || window.event;\n  if (e.stopPropagation) {\n    e.stopPropagation();\n  } else {\n    e.cancelBubble = true;\n  }\n  if (e.preventDefault) {\n    e.preventDefault();\n  } else {\n    e.returnValue = false;\n  }\n}\n\nexport function stopPropagation(e: Event | null) {\n  e = e || window.event;\n  if (e.stopPropagation) {\n    e.stopPropagation();\n  } else {\n    e.cancelBubble = true;\n  }\n}\n\nexport function omit(\n  o: { [key: string]: any },\n  keys: string[]\n): { [key: string]: any } {\n  const x = { ...o };\n\n  keys.forEach((k) => delete x[k]);\n  return x;\n}\n","/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extend } from \"./util\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OverlayViewSafe extends google.maps.OverlayView {}\n\n/**\n * @ignore\n */\nexport class OverlayViewSafe {\n  constructor() {\n    extend(OverlayViewSafe, google.maps.OverlayView);\n  }\n}\n","/**\n * Copyright 2020 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MarkerWithLabelOptions } from \"./marker\";\nimport { OverlayViewSafe } from \"./overlay-view-safe\";\n\nexport type LabelOptions = Partial<MarkerWithLabelOptions>;\n\nconst BLOCK = \"block\";\nconst NONE = \"none\";\nconst ABSOLUTE = \"absolute\";\nconst CURSOR = \"pointer\";\nconst LABEL_CLASS = \"marker-label\";\nconst EVENT_CLASS = \"marker-label-event\";\nconst EVENT_DIV_OPACITY = \"0.01\";\n\nexport class Label extends OverlayViewSafe {\n  public anchor: google.maps.Point;\n  public position: google.maps.LatLng;\n  public zIndex: number;\n  public clickable: boolean;\n  public draggable: boolean;\n  private labelDiv: HTMLElement;\n  private eventDiv: HTMLElement;\n  private zIndexOffset: number;\n  private hoverCursor: string;\n\n  constructor({\n    clickable = true,\n    cursor = CURSOR,\n    draggable = true,\n    labelAnchor = new google.maps.Point(0, 0),\n    labelClass = LABEL_CLASS,\n    labelContent,\n    position,\n    opacity = 1,\n    map,\n    labelZIndexOffset = 1,\n    visible = true,\n    zIndex = 0,\n  }: LabelOptions) {\n    super();\n\n    this.createElements();\n\n    this.anchor = labelAnchor;\n    this.content = labelContent;\n    this.className = labelClass;\n    this.clickable = clickable;\n    this.cursor = cursor;\n    this.draggable = draggable;\n\n    if (position instanceof google.maps.LatLng) {\n      this.position = position;\n    } else {\n      this.position = new google.maps.LatLng(position);\n    }\n\n    this.opacity = opacity;\n    this.visible = visible;\n    this.zIndex = zIndex;\n    this.zIndexOffset = labelZIndexOffset;\n\n    if (map) {\n      this.setMap(map);\n    }\n  }\n\n  set content(content: string | HTMLElement) {\n    if (typeof content === \"string\") {\n      this.labelDiv.innerHTML = content;\n      this.eventDiv.innerHTML = content;\n    } else {\n      this.labelDiv.innerHTML = \"\";\n      this.labelDiv.appendChild(content);\n      this.eventDiv.innerHTML = \"\";\n      this.eventDiv.appendChild(content.cloneNode(true));\n    }\n  }\n\n  /**\n   * Get the class of the label div elements.\n   *\n   * **Note**: This will always return the default `marker-label`.\n   */\n  get className(): string {\n    return this.labelDiv.className;\n  }\n\n  /**\n   * Set the class of the label div elements.\n   *\n   * **Note**: The default `marker-label` will additionaly be added.\n   */\n  set className(className: string) {\n    this.labelDiv.className = className;\n    this.labelDiv.classList.add(LABEL_CLASS);\n    this.eventDiv.className = className;\n    this.eventDiv.classList.add(EVENT_CLASS);\n  }\n\n  set cursor(cursor: string) {\n    this.hoverCursor = cursor;\n    if (this.isInteractive) {\n      this.eventDiv.style.cursor = cursor;\n    }\n  }\n\n  get cursor() {\n    return this.isInteractive ? this.hoverCursor : \"inherit\";\n  }\n\n  get isInteractive() {\n    return this.draggable || this.clickable;\n  }\n\n  set opacity(opacity: number) {\n    this.labelDiv.style.opacity = String(opacity);\n  }\n\n  set title(title: string) {\n    this.eventDiv.title = title;\n  }\n\n  set visible(visible: boolean) {\n    if (visible) {\n      this.labelDiv.style.display = BLOCK;\n      this.eventDiv.style.display = BLOCK;\n    } else {\n      this.labelDiv.style.display = NONE;\n      this.eventDiv.style.display = NONE;\n    }\n  }\n\n  onAdd() {\n    this.getPanes().markerLayer.appendChild(this.labelDiv);\n    this.getPanes().overlayMouseTarget.appendChild(this.eventDiv);\n  }\n\n  draw() {\n    const coordinates = this.getProjection().fromLatLngToDivPixel(\n      this.position\n    );\n    const x = Math.round(coordinates.x + this.anchor.x);\n    const y = Math.round(coordinates.y + this.anchor.y);\n    this.labelDiv.style.left = `${x}px`;\n    this.labelDiv.style.top = `${y}px`;\n    this.eventDiv.style.left = this.labelDiv.style.left;\n    this.eventDiv.style.top = this.labelDiv.style.top;\n\n    // If zIndex is not defined, used vertical position on map.\n    const zIndex =\n      (this.zIndex || Math.ceil(coordinates.y)) + this.zIndexOffset;\n    this.labelDiv.style.zIndex = String(zIndex);\n    this.eventDiv.style.zIndex = String(zIndex);\n\n    // If not interactive set display none on event div\n    this.eventDiv.style.display = this.isInteractive\n      ? this.eventDiv.style.display\n      : NONE;\n    this.eventDiv.style.cursor = this.cursor;\n  }\n\n  addDomListener(\n    event: string,\n    handler: (event: Event) => void\n  ): google.maps.MapsEventListener {\n    return google.maps.event.addDomListener(this.eventDiv, event, handler);\n  }\n\n  onRemove() {\n    this.labelDiv.parentNode.removeChild(this.labelDiv);\n    this.eventDiv.parentNode.removeChild(this.eventDiv);\n  }\n\n  private createElements(): void {\n    this.labelDiv = document.createElement(\"div\");\n    this.eventDiv = document.createElement(\"div\");\n\n    // default class names\n    this.labelDiv.classList.add(LABEL_CLASS);\n    this.labelDiv.classList.add(EVENT_CLASS);\n\n    // default styles for both divs\n    this.labelDiv.style.position = ABSOLUTE;\n    this.eventDiv.style.position = ABSOLUTE;\n\n    // default styles for eventDiv\n    this.eventDiv.style.opacity = EVENT_DIV_OPACITY;\n  }\n}\n","/**\n * Copyright 2020 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extend } from \"./util\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MarkerSafe extends google.maps.Marker {}\n\n/**\n * @ignore\n */\nexport class MarkerSafe {\n  constructor(options: google.maps.MarkerOptions) {\n    extend(MarkerSafe, google.maps.Marker);\n    google.maps.Marker.call(this, options);\n  }\n}\n","/**\n * Copyright 2020 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { abortEvent, omit, stopPropagation } from \"./util\";\n\nimport { Label } from \"./label\";\nimport { MarkerSafe } from \"./marker-safe\";\n\nconst CLICK = \"click\";\nconst DBLCLICK = \"dblclick\";\nconst DRAG = \"drag\";\nconst DRAGEND = \"dragend\";\nconst DRAGSTART = \"dragstart\";\nconst MOUSEDOWN = \"mousedown\";\nconst MOUSEMOVE = \"mousemove\";\nconst MOUSEOVER = \"mouseover\";\nconst MOUSEOUT = \"mouseout\";\nconst MOUSEUP = \"mouseup\";\n\nexport interface MarkerWithLabelOptions extends google.maps.MarkerOptions {\n  labelContent: string | HTMLElement;\n  labelAnchor?: google.maps.Point;\n  labelZIndexOffset?: number;\n  labelClass?: string;\n}\n\nexport class MarkerWithLabel extends MarkerSafe {\n  private label: Label;\n  private propertyListeners: google.maps.MapsEventListener[];\n  private interactiveListeners: google.maps.MapsEventListener[];\n  private isTouchScreen = false;\n  private isDraggingLabel = false;\n  private isMouseDownOnLabel = false;\n  private shouldIgnoreClick = false;\n  private eventOffset: google.maps.Point | null;\n  private mouseOutTimeout: ReturnType<typeof setTimeout>;\n\n  constructor(options: MarkerWithLabelOptions) {\n    // need to omit extended options to Marker class that collide with setters/getters\n    super(\n      omit(options, [\n        \"labelAnchor\",\n        \"labelZIndexOffset\",\n        \"labelClass\",\n        \"labelContent\",\n      ])\n    );\n    this.label = new Label({ ...{}, ...options });\n\n    this.propertyListeners = [\n      google.maps.event.addListener(\n        this,\n        \"clickable_changed\",\n        this.handleClickableOrDraggableChange\n      ),\n      google.maps.event.addListener(this, \"cursor_changed\", () => {\n        this.label.cursor = this.getCursor();\n      }),\n      google.maps.event.addListener(\n        this,\n        \"draggable_changed\",\n        this.handleClickableOrDraggableChange\n      ),\n      google.maps.event.addListener(this, \"position_changed\", () => {\n        this.label.position = this.getPosition();\n      }),\n      google.maps.event.addListener(this, \"opacity_changed\", () => {\n        this.label.opacity = this.getOpacity();\n      }),\n      google.maps.event.addListener(this, \"title_changed\", () => {\n        this.label.title = this.getTitle();\n      }),\n      google.maps.event.addListener(this, \"visible_changed\", () => {\n        this.label.visible = this.getVisible();\n      }),\n      google.maps.event.addListener(this, \"zindex_changed\", () => {\n        this.label.zIndex = this.getZIndex();\n        this.label.draw();\n      }),\n    ];\n  }\n\n  get isInteractive() {\n    return this.getClickable() || this.getDraggable();\n  }\n\n  get labelClass() {\n    return this.label.className;\n  }\n\n  set labelClass(className: string) {\n    this.label.className = className;\n  }\n\n  setMap(map: google.maps.Map | google.maps.StreetViewPanorama | null): void {\n    super.setMap(map);\n    setTimeout(() => {\n      this.label.setMap(map);\n      this.removeInteractiveListeners();\n      if (map) {\n        this.addInteractiveListeners();\n      }\n    });\n  }\n\n  private handleClickableOrDraggableChange() {\n    this.label.clickable = this.getClickable();\n    this.label.draggable = this.getDraggable();\n\n    if (this.isInteractive) {\n      this.addInteractiveListeners();\n    } else {\n      this.removeInteractiveListeners();\n    }\n  }\n\n  private removeInteractiveListeners() {\n    if (this.interactiveListeners) {\n      this.interactiveListeners.forEach((l) =>\n        google.maps.event.removeListener(l)\n      );\n      this.interactiveListeners = null;\n    }\n  }\n\n  private addInteractiveListeners() {\n    if (!this.interactiveListeners) {\n      // If the map is not set, do not set listeners\n      if (!this.getMap()) {\n        return;\n      }\n\n      this.interactiveListeners = [\n        this.label.addDomListener(MOUSEOVER, (e) => {\n          if (!this.isTouchScreen) {\n            google.maps.event.trigger(this, MOUSEOVER, {\n              latLng: this.getPosition(),\n            });\n\n            abortEvent(e);\n          }\n        }),\n        this.label.addDomListener(MOUSEOUT, (e) => {\n          if (!this.isTouchScreen) {\n            // wrap the mouseout event in a timeout to avoid the case where mouseup occurs out\n            if (this.mouseOutTimeout) {\n              clearTimeout(this.mouseOutTimeout);\n            }\n\n            if (this.isMouseDownOnLabel) {\n              this.mouseOutTimeout = setTimeout(() => {\n                if (this.isMouseDownOnLabel) {\n                  this.isMouseDownOnLabel = false;\n                  google.maps.event.trigger(this, MOUSEUP, {\n                    latLng: this.getPosition(),\n                  });\n\n                  if (this.isDraggingLabel) {\n                    this.isDraggingLabel = false;\n                    this.shouldIgnoreClick = true;\n                    google.maps.event.trigger(this, DRAGEND, {\n                      latLng: this.getPosition(),\n                    });\n                  }\n                }\n\n                google.maps.event.trigger(this, MOUSEOUT, {\n                  latLng: this.getPosition(),\n                });\n              }, 200);\n            } else {\n              google.maps.event.trigger(this, MOUSEOUT, {\n                latLng: this.getPosition(),\n              });\n            }\n\n            abortEvent(e);\n          }\n        }),\n        this.label.addDomListener(MOUSEDOWN, (e) => {\n          this.isDraggingLabel = false;\n          this.isMouseDownOnLabel = true;\n          google.maps.event.trigger(this, MOUSEDOWN, {\n            latLng: this.getPosition(),\n          });\n          if (!this.isTouchScreen) {\n            abortEvent(e);\n          }\n        }),\n        this.label.addDomListener(MOUSEUP, (e) => {\n          const markerEvent = { latLng: this.getPosition() };\n\n          if (this.isMouseDownOnLabel) {\n            this.isMouseDownOnLabel = false;\n\n            google.maps.event.trigger(this, MOUSEUP, markerEvent);\n\n            if (this.isDraggingLabel) {\n              this.isDraggingLabel = false;\n              this.shouldIgnoreClick = true;\n              google.maps.event.trigger(this, DRAGEND, markerEvent);\n            }\n\n            if (!this.getDraggable()) {\n              abortEvent(e);\n            }\n          }\n        }),\n        this.label.addDomListener(CLICK, (e) => {\n          if (this.shouldIgnoreClick) {\n            this.shouldIgnoreClick = false;\n          } else {\n            google.maps.event.trigger(this, CLICK, {\n              latLng: this.getPosition(),\n            });\n          }\n          abortEvent(e);\n        }),\n        this.label.addDomListener(DBLCLICK, (e) => {\n          google.maps.event.trigger(this, DBLCLICK, {\n            latLng: this.getPosition(),\n          });\n          abortEvent(e);\n        }),\n        google.maps.event.addListener(\n          this.getMap(),\n          MOUSEMOVE,\n          (e: google.maps.MapMouseEvent) => {\n            if (this.isMouseDownOnLabel && this.getDraggable()) {\n              if (this.isDraggingLabel) {\n                // Adjust for offset\n                const position = new google.maps.LatLng(\n                  e.latLng.lat() - this.eventOffset.y,\n                  e.latLng.lng() - this.eventOffset.x\n                );\n                // this.setPosition(position);\n                google.maps.event.trigger(this, DRAG, {\n                  ...e,\n                  latLng: position,\n                });\n              } else {\n                this.isDraggingLabel = true;\n\n                // Calculate and store event offset from marker position\n                this.eventOffset = new google.maps.Point(\n                  e.latLng.lng() - this.getPosition().lng(),\n                  e.latLng.lat() - this.getPosition().lat()\n                );\n                google.maps.event.trigger(this, DRAGSTART, {\n                  ...e,\n                  latLng: this.getPosition(),\n                });\n              }\n            }\n          }\n        ),\n        google.maps.event.addListener(this, DRAGSTART, () => {\n          this.label.zIndex = 1000000;\n        }),\n        google.maps.event.addListener(\n          this,\n          DRAG,\n          ({ latLng }: google.maps.MapMouseEvent) => {\n            this.setPosition(latLng);\n          }\n        ),\n        google.maps.event.addListener(this, DRAGEND, () => {\n          this.label.zIndex = this.getZIndex();\n          this.label.draw();\n        }),\n        // Prevent touch events from passing through the label DIV to the underlying map.\n        this.label.addDomListener(\"touchstart\", (e) => {\n          this.isTouchScreen = true;\n          stopPropagation(e);\n        }),\n        this.label.addDomListener(\"touchmove\", (e) => {\n          stopPropagation(e);\n        }),\n        this.label.addDomListener(\"touchend\", (e) => {\n          stopPropagation(e);\n        }),\n      ];\n    }\n  }\n}\n"],"names":["extend","type1","type2","property","prototype","abortEvent","e","window","event","stopPropagation","cancelBubble","preventDefault","returnValue","OverlayViewSafe","constructor","google","maps","OverlayView","BLOCK","NONE","ABSOLUTE","LABEL_CLASS","EVENT_CLASS","Label","clickable","cursor","draggable","labelAnchor","Point","labelClass","labelContent","position","opacity","map","labelZIndexOffset","visible","zIndex","createElements","anchor","content","className","LatLng","zIndexOffset","setMap","labelDiv","innerHTML","eventDiv","appendChild","cloneNode","this","classList","add","hoverCursor","isInteractive","style","String","title","display","onAdd","getPanes","markerLayer","overlayMouseTarget","draw","coordinates","getProjection","fromLatLngToDivPixel","x","Math","round","y","left","top","ceil","addDomListener","handler","onRemove","parentNode","removeChild","document","createElement","MarkerSafe","options","Marker","call","CLICK","DBLCLICK","DRAG","DRAGEND","DRAGSTART","MOUSEDOWN","MOUSEOVER","MOUSEOUT","MOUSEUP","o","keys","forEach","k","omit","label","propertyListeners","addListener","handleClickableOrDraggableChange","getCursor","getPosition","getOpacity","getTitle","getVisible","getZIndex","getClickable","getDraggable","setTimeout","removeInteractiveListeners","addInteractiveListeners","interactiveListeners","l","removeListener","getMap","isTouchScreen","trigger","latLng","mouseOutTimeout","clearTimeout","isMouseDownOnLabel","isDraggingLabel","shouldIgnoreClick","markerEvent","lat","eventOffset","lng","setPosition"],"mappings":"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"}